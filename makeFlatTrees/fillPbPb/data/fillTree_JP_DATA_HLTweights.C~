#include "jetTreeReaderPbPbDATA.C"
#include "globalTreeReaderPbPbDATA.C"
#include "hiEvtTreeReaderPbPbDATA.C"
#include "hltTreeReaderPbPbDATA.C"
#include "mujetObjTreeReaderPbPbDATA.C"

#define jetTreeReaderPbPb jetTreeReaderPbPbDATA
#define globalTreeReaderPbPb globalTreeReaderPbPbDATA
#define hiEvtTreeReaderPbPb hiEvtTreeReaderPbPbDATA
#define hltTreeReaderPbPb hltTreeReaderPbPbDATA
#define mujetObjTreeReaderPbPb mujetObjTreeReaderPbPbDATA

#include "TH1F.h"
#include "TLorentzVector.h"
#include <iostream>
#include <iostream>
#include <fstream>
#include <sstream>
#include <cstring>
#include <string>
#include <algorithm>
#include "TRandom3.h"

using namespace std;

float getDeltaR(float eta1,float phi1,float eta2,float phi2)
{
  float deltaPhi = TMath::Abs(phi1-phi2);
  float deltaEta = eta1-eta2;
  if(deltaPhi > TMath::Pi())
    deltaPhi = TMath::TwoPi() - deltaPhi;
  return TMath::Sqrt(deltaEta*deltaEta + deltaPhi*deltaPhi);
}

void fillTree_JP_DATA_HLTweights() {

  TChain *tchGlob = new TChain("skimanalysis/HltTree");
  TChain *tchJet = new TChain("akFlowPuCs4PFJetAnalyzer/t");
  TChain *tchHiEvt = new TChain("hiEvtAnalyzer/HiTree");
  TChain *tchHLT = new TChain("hltanalysis/HltTree");
  TChain *hltobj_mu3jet40 = new TChain("hltobject/HLT_HIL3Mu3Eta2p5_PuAK4CaloJet40Eta2p1_v");
  TChain *hltobj_mu5jet40 = new TChain("hltobject/HLT_HIL3Mu5Eta2p5_PuAK4CaloJet40Eta2p1_v");
  TChain *hltobj_mu3jet60 = new TChain("hltobject/HLT_HIL3Mu3Eta2p5_PuAK4CaloJet60Eta2p1_v");
  TChain *hltobj_mu5jet60 = new TChain("hltobject/HLT_HIL3Mu5Eta2p5_PuAK4CaloJet60Eta2p1_v");
  TChain *hltobj_mu3jet80 = new TChain("hltobject/HLT_HIL3Mu3Eta2p5_PuAK4CaloJet80Eta2p1_v");
  TChain *hltobj_mu5jet80 = new TChain("hltobject/HLT_HIL3Mu5Eta2p5_PuAK4CaloJet80Eta2p1_v");
  TChain *hltobj_mu3jet100 = new TChain("hltobject/HLT_HIL3Mu3Eta2p5_PuAK4CaloJet100Eta2p1_v");
  TChain *hltobj_mu5jet100 = new TChain("hltobject/HLT_HIL3Mu5Eta2p5_PuAK4CaloJet100Eta2p1_v");


  ifstream myReadFileMC;
  myReadFileMC.open("HISingleMuon_MuJetFiltered.txt");
  string path_mc = "/eos/cms/store/group/phys_heavyions/ikucher/bjetFrac/HISingleMuon_MuEnriched_NewFilter_NewTriggerObj_merged/";
  char output_mc[800];
  
  if(myReadFileMC.is_open()) {
    while (!myReadFileMC.eof()) {
      myReadFileMC >> output_mc;
      if (myReadFileMC.eof()) break;
      
      stringstream ss_mc;
      string s_output_mc = "";
      string finalPath_mc = "";
      ss_mc << output_mc;
      ss_mc >> s_output_mc;
      
      finalPath_mc += path_mc;
      finalPath_mc += s_output_mc;
      cout << "path = " << finalPath_mc << endl;
      tchJet->Add(finalPath_mc.c_str());
      tchGlob->Add(finalPath_mc.c_str());
      tchHiEvt->Add(finalPath_mc.c_str());

      tchHLT->Add(finalPath_mc.c_str());
      hltobj_mu3jet40->Add(finalPath_mc.c_str());
      hltobj_mu5jet40->Add(finalPath_mc.c_str());
      hltobj_mu3jet60->Add(finalPath_mc.c_str());
      hltobj_mu5jet60->Add(finalPath_mc.c_str());
      hltobj_mu3jet80->Add(finalPath_mc.c_str());
      hltobj_mu5jet80->Add(finalPath_mc.c_str());
      hltobj_mu3jet100->Add(finalPath_mc.c_str());
      hltobj_mu5jet100->Add(finalPath_mc.c_str());

    }
  }
  
  myReadFileMC.close();
  
  globalTreeReaderPbPb globR(tchGlob);
  jetTreeReaderPbPb jetR(tchJet);
  hiEvtTreeReaderPbPb hiEvtR(tchHiEvt);
  hltTreeReaderPbPb hltR(tchHLT);

  mujetObjTreeReaderPbPb mu3jet40R(hltobj_mu3jet40);
  mujetObjTreeReaderPbPb mu5jet40R(hltobj_mu5jet40);
  mujetObjTreeReaderPbPb mu3jet60R(hltobj_mu3jet60);
  mujetObjTreeReaderPbPb mu5jet60R(hltobj_mu5jet60);
  mujetObjTreeReaderPbPb mu3jet80R(hltobj_mu3jet80);
  mujetObjTreeReaderPbPb mu5jet80R(hltobj_mu5jet80);
  mujetObjTreeReaderPbPb mu3jet100R(hltobj_mu3jet100);
  mujetObjTreeReaderPbPb mu5jet100R(hltobj_mu5jet100);


  //set branch status
  jetR.fChain->SetBranchStatus("*",0);
  hiEvtR.fChain->SetBranchStatus("*",0);
  globR.fChain->SetBranchStatus("*",0);  

  hltR.fChain->SetBranchStatus("*",0);
  mu3jet40R.fChain->SetBranchStatus("*",0);
  mu5jet40R.fChain->SetBranchStatus("*",0);
  mu3jet60R.fChain->SetBranchStatus("*",0);
  mu5jet60R.fChain->SetBranchStatus("*",0);
  mu3jet80R.fChain->SetBranchStatus("*",0);
  mu5jet80R.fChain->SetBranchStatus("*",0);
  mu3jet100R.fChain->SetBranchStatus("*",0);
  mu5jet100R.fChain->SetBranchStatus("*",0);


  jetR.fChain->SetBranchStatus("run",1);
  jetR.fChain->SetBranchStatus("evt",1);
  jetR.fChain->SetBranchStatus("lumi",1);
  jetR.fChain->SetBranchStatus("nref",1);
  jetR.fChain->SetBranchStatus("rawpt",1);
  jetR.fChain->SetBranchStatus("jtpt",1);
  jetR.fChain->SetBranchStatus("jteta",1);
  jetR.fChain->SetBranchStatus("jtphi",1);
  jetR.fChain->SetBranchStatus("discr_csvV2",1);
  jetR.fChain->SetBranchStatus("pdiscr_csvV2",1);
  jetR.fChain->SetBranchStatus("ndiscr_csvV2",1);
  jetR.fChain->SetBranchStatus("discr_prob",1);
  jetR.fChain->SetBranchStatus("mupt",1);

  globR.fChain->SetBranchStatus("phfCoincFilter2Th4",1);
  globR.fChain->SetBranchStatus("pclusterCompatibilityFilter",1);
  globR.fChain->SetBranchStatus("pprimaryVertexFilter",1);
  globR.fChain->SetBranchStatus("pBeamScrapingFilter",1);
  globR.fChain->SetBranchStatus("collisionEventSelectionAODv2",1);
  globR.fChain->SetBranchStatus("HBHENoiseFilterResultRun2Loose",1);

  hiEvtR.fChain->SetBranchStatus("hiBin",1);
  hiEvtR.fChain->SetBranchStatus("vz",1);
  hiEvtR.fChain->SetBranchStatus("hiHF",1);

  hltR.fChain->SetBranchStatus("HLT_HIL3Mu3Eta2p5_PuAK4CaloJet40Eta2p1_v1",1);
  hltR.fChain->SetBranchStatus("HLT_HIL3Mu5Eta2p5_PuAK4CaloJet40Eta2p1_v1",1);
  hltR.fChain->SetBranchStatus("HLT_HIL3Mu3Eta2p5_PuAK4CaloJet60Eta2p1_v1",1);
  hltR.fChain->SetBranchStatus("HLT_HIL3Mu5Eta2p5_PuAK4CaloJet60Eta2p1_v1",1);
  hltR.fChain->SetBranchStatus("HLT_HIL3Mu3Eta2p5_PuAK4CaloJet80Eta2p1_v1",1);
  hltR.fChain->SetBranchStatus("HLT_HIL3Mu5Eta2p5_PuAK4CaloJet80Eta2p1_v1",1);
  hltR.fChain->SetBranchStatus("HLT_HIL3Mu3Eta2p5_PuAK4CaloJet100Eta2p1_v1",1);
  hltR.fChain->SetBranchStatus("HLT_HIL3Mu5Eta2p5_PuAK4CaloJet100Eta2p1_v1",1);
  hltR.fChain->SetBranchStatus("HLT_HIL3Mu5Eta2p5_PuAK4CaloJet100Eta2p1_v1_Prescl",1);

  mu3jet40R.fChain->SetBranchStatus("pt",1);
  mu3jet60R.fChain->SetBranchStatus("pt",1);
  mu3jet80R.fChain->SetBranchStatus("pt",1);
  mu3jet100R.fChain->SetBranchStatus("pt",1);

  mu5jet40R.fChain->SetBranchStatus("pt",1);
  mu5jet60R.fChain->SetBranchStatus("pt",1);
  mu5jet80R.fChain->SetBranchStatus("pt",1);
  mu5jet100R.fChain->SetBranchStatus("pt",1);

  mu3jet40R.fChain->SetBranchStatus("eta",1);
  mu3jet60R.fChain->SetBranchStatus("eta",1);
  mu3jet80R.fChain->SetBranchStatus("eta",1);
  mu3jet100R.fChain->SetBranchStatus("eta",1);

  mu5jet40R.fChain->SetBranchStatus("eta",1);
  mu5jet60R.fChain->SetBranchStatus("eta",1);
  mu5jet80R.fChain->SetBranchStatus("eta",1);
  mu5jet100R.fChain->SetBranchStatus("eta",1);
  
  mu3jet40R.fChain->SetBranchStatus("phi",1);
  mu3jet60R.fChain->SetBranchStatus("phi",1);
  mu3jet80R.fChain->SetBranchStatus("phi",1);
  mu3jet100R.fChain->SetBranchStatus("phi",1);

  mu5jet40R.fChain->SetBranchStatus("phi",1);
  mu5jet60R.fChain->SetBranchStatus("phi",1);
  mu5jet80R.fChain->SetBranchStatus("phi",1);
  mu5jet100R.fChain->SetBranchStatus("phi",1);

  mu3jet40R.fChain->SetBranchStatus("TriggerObjID",1);
  mu3jet60R.fChain->SetBranchStatus("TriggerObjID",1);
  mu3jet80R.fChain->SetBranchStatus("TriggerObjID",1);
  mu3jet100R.fChain->SetBranchStatus("TriggerObjID",1);

  mu5jet40R.fChain->SetBranchStatus("TriggerObjID",1);
  mu5jet60R.fChain->SetBranchStatus("TriggerObjID",1);
  mu5jet80R.fChain->SetBranchStatus("TriggerObjID",1);
  mu5jet100R.fChain->SetBranchStatus("TriggerObjID",1);

     
  if (jetR.fChain == 0) return;
  if (globR.fChain == 0) return;
  if (hiEvtR.fChain == 0) return;

  Long64_t nentries = jetR.fChain->GetEntries();
  Long64_t nentries3 = globR.fChain->GetEntries();

  if (nentries != nentries3) return;

  double num60 = hltR.fChain->GetEntries("HLT_HIL3Mu3Eta2p5_PuAK4CaloJet100Eta2p1_v1==1 || HLT_HIL3Mu5Eta2p5_PuAK4CaloJet100Eta2p1_v1==1");
  double den60 = hltR.fChain->GetEntries("(HLT_HIL3Mu3Eta2p5_PuAK4CaloJet60Eta2p1_v1==1 || HLT_HIL3Mu5Eta2p5_PuAK4CaloJet60Eta2p1_v1==1) && (HLT_HIL3Mu3Eta2p5_PuAK4CaloJet100Eta2p1_v1==1 || HLT_HIL3Mu5Eta2p5_PuAK4CaloJet100Eta2p1_v1==1)");
  double PS60 = num60/den60;

  double num40 = hltR.fChain->GetEntries("HLT_HIL3Mu3Eta2p5_PuAK4CaloJet100Eta2p1_v1==1 || HLT_HIL3Mu5Eta2p5_PuAK4CaloJet100Eta2p1_v1==1");
  double den40 = hltR.fChain->GetEntries("(HLT_HIL3Mu3Eta2p5_PuAK4CaloJet40Eta2p1_v1==1 || HLT_HIL3Mu5Eta2p5_PuAK4CaloJet40Eta2p1_v1==1) && (HLT_HIL3Mu3Eta2p5_PuAK4CaloJet100Eta2p1_v1==1 || HLT_HIL3Mu5Eta2p5_PuAK4CaloJet100Eta2p1_v1==1)");
  double PS40 = num40/den40;

  cout << "nentries = " << nentries << endl;
  cout << "PS60 = " << PS60 << endl;
  cout << "PS40 = " << PS40 << endl;

  //TFile *fout = new TFile("/eos/cms/store/group/phys_heavyions/ikucher/bjetFrac/compact_ntuples/jetTree_JP_PbPb_DATA_SingleMuonPD_MuonJetsOnly_Weight_hiHF_V2.root","RECREATE");
  TFile *fout = new TFile("/tmp/mnguyen/jetTree_JP_PbPb_DATA_SingleMuonPD_MuonJetsOnly_Weight_hiHF_V2.root","RECREATE");

  // flat jet tree
  TDirectory *tdir = fout->mkdir("jetTree");
  tdir->cd();
  TTree *tr = new TTree("tree","jet tree with JP tagger");

  //general jet vars

  Int_t           nref;
  Int_t           run;
  Int_t           evt;
  Int_t           lumi;
  Float_t         mupt;
  Float_t         rawpt;
  Float_t         jtpt;
  Float_t         jteta;
  Float_t         jtphi;
  Float_t         discr_csvV2;
  Float_t         pdiscr_csvV2;
  Float_t         ndiscr_csvV2;
  Float_t         discr_prob;

  //event vars 

  Int_t           hiBin;
  Float_t         vz;
  Float_t         hiHF;


  //online pt and weight related to HLT/L1 PS

  Int_t HLT_HIL3Mu5Eta2p5_PuAK4CaloJet40Eta2p1_v1;
  Int_t HLT_HIL3Mu3Eta2p5_PuAK4CaloJet40Eta2p1_v1;

  Int_t HLT_HIL3Mu5Eta2p5_PuAK4CaloJet60Eta2p1_v1;
  Int_t HLT_HIL3Mu3Eta2p5_PuAK4CaloJet60Eta2p1_v1;

  Int_t HLT_HIL3Mu5Eta2p5_PuAK4CaloJet80Eta2p1_v1;
  Int_t HLT_HIL3Mu3Eta2p5_PuAK4CaloJet80Eta2p1_v1;

  Int_t HLT_HIL3Mu5Eta2p5_PuAK4CaloJet100Eta2p1_v1;
  Int_t HLT_HIL3Mu3Eta2p5_PuAK4CaloJet100Eta2p1_v1;

  Int_t HLT_HIL3Mu5Eta2p5_PuAK4CaloJet100Eta2p1_v1_Prescl;

  Float_t weight;
  Int_t nTP;
  vector<float> *onlinePt =0;
  vector<float> *onlineEta=0;
  vector<float> *onlinePhi=0;
   
  // book variables
  tr->Branch("nref",&nref,"nref/I");
  tr->Branch("run",&run,"run/I");
  tr->Branch("evt",&evt,"evt/I");
  tr->Branch("lumi",&lumi,"lumi/I");

  tr->Branch("hiBin",&hiBin,"hiBin/I");
  tr->Branch("vz",&vz,"vz/F");
  tr->Branch("hiHF",&hiHF,"hiHF/F");

  tr->Branch("mupt",&mupt,"mupt/F");
  tr->Branch("rawpt",&rawpt,"rawpt/F");
  tr->Branch("jtpt",&jtpt,"jtpt/F");
  tr->Branch("jteta",&jteta,"jteta/F");
  tr->Branch("jtphi",&jtphi,"jtphi/F");
  tr->Branch("discr_csvV2",&discr_csvV2,"discr_csvV2/F");
  tr->Branch("pdiscr_csvV2",&pdiscr_csvV2,"pdiscr_csvV2/F");
  tr->Branch("ndiscr_csvV2",&ndiscr_csvV2,"ndiscr_csvV2/F");
  tr->Branch("discr_prob",&discr_prob,"discr_prob/F");

  tr->Branch("HLT_HIL3Mu3Eta2p5_PuAK4CaloJet40Eta2p1_v1",&HLT_HIL3Mu3Eta2p5_PuAK4CaloJet40Eta2p1_v1,"HLT_HIL3Mu3Eta2p5_PuAK4CaloJet40Eta2p1_v1/I");
  tr->Branch("HLT_HIL3Mu5Eta2p5_PuAK4CaloJet40Eta2p1_v1",&HLT_HIL3Mu5Eta2p5_PuAK4CaloJet40Eta2p1_v1,"HLT_HIL3Mu5Eta2p5_PuAK4CaloJet40Eta2p1_v1/I");
  tr->Branch("HLT_HIL3Mu3Eta2p5_PuAK4CaloJet60Eta2p1_v1",&HLT_HIL3Mu3Eta2p5_PuAK4CaloJet60Eta2p1_v1,"HLT_HIL3Mu3Eta2p5_PuAK4CaloJet60Eta2p1_v1/I");
  tr->Branch("HLT_HIL3Mu5Eta2p5_PuAK4CaloJet60Eta2p1_v1",&HLT_HIL3Mu5Eta2p5_PuAK4CaloJet60Eta2p1_v1,"HLT_HIL3Mu5Eta2p5_PuAK4CaloJet60Eta2p1_v1/I");
  tr->Branch("HLT_HIL3Mu3Eta2p5_PuAK4CaloJet80Eta2p1_v1",&HLT_HIL3Mu3Eta2p5_PuAK4CaloJet80Eta2p1_v1,"HLT_HIL3Mu3Eta2p5_PuAK4CaloJet80Eta2p1_v1/I");
  tr->Branch("HLT_HIL3Mu5Eta2p5_PuAK4CaloJet80Eta2p1_v1",&HLT_HIL3Mu5Eta2p5_PuAK4CaloJet80Eta2p1_v1,"HLT_HIL3Mu5Eta2p5_PuAK4CaloJet80Eta2p1_v1/I");
  tr->Branch("HLT_HIL3Mu3Eta2p5_PuAK4CaloJet100Eta2p1_v1",&HLT_HIL3Mu3Eta2p5_PuAK4CaloJet100Eta2p1_v1,"HLT_HIL3Mu3Eta2p5_PuAK4CaloJet100Eta2p1_v1/I");
  tr->Branch("HLT_HIL3Mu5Eta2p5_PuAK4CaloJet100Eta2p1_v1",&HLT_HIL3Mu5Eta2p5_PuAK4CaloJet100Eta2p1_v1,"HLT_HIL3Mu5Eta2p5_PuAK4CaloJet100Eta2p1_v1/I");
  tr->Branch("HLT_HIL3Mu5Eta2p5_PuAK4CaloJet100Eta2p1_v1_Prescl",&HLT_HIL3Mu5Eta2p5_PuAK4CaloJet100Eta2p1_v1_Prescl,"HLT_HIL3Mu5Eta2p5_PuAK4CaloJet100Eta2p1_v1_Prescl/I");

  tr->Branch("nTP",&nTP,"nTP/I");
  tr->Branch("onlinePt",&onlinePt);
  tr->Branch("onlineEta",&onlineEta);
  tr->Branch("onlinePhi",&onlinePhi);
  tr->Branch("weight",&weight,"weight/F");

  Long64_t nbytes = 0, nb = 0;

  //for (Long64_t jentry=0; jentry<10000;jentry++) {
  for (Long64_t jentry=0; jentry<nentries;jentry++) {

    if (jentry%10000==0) cout << "--> " << jentry << "/" << nentries << " , " << jentry*100/nentries << " % done" << endl;
    //cout << "--> " << jentry << "/" << nentries << endl;

    Long64_t ientry_jet = jetR.LoadTree(jentry);
    if (ientry_jet < 0) break;

    Long64_t ientry_glob = globR.LoadTree(jentry);
    if (ientry_glob < 0) break;

    Long64_t ientry_hievt = hiEvtR.LoadTree(jentry);
    if (ientry_hievt < 0) break;

    Long64_t ientry_hlt = hltR.LoadTree(jentry);
    if (ientry_hlt < 0) break;
    
    Long64_t ientry_mu3jet40 = mu3jet40R.LoadTree(jentry);
    if (ientry_mu3jet40 < 0) break;
    Long64_t ientry_mu5jet40 = mu5jet40R.LoadTree(jentry);
    if (ientry_mu5jet40 < 0) break;

    Long64_t ientry_mu3jet60 = mu3jet60R.LoadTree(jentry);
    if (ientry_mu3jet60 < 0) break;
    Long64_t ientry_mu5jet60 = mu5jet60R.LoadTree(jentry);
    if (ientry_mu5jet60 < 0) break;

    Long64_t ientry_mu3jet80 = mu3jet80R.LoadTree(jentry);
    if (ientry_mu3jet80 < 0) break;
    Long64_t ientry_mu5jet80 = mu5jet80R.LoadTree(jentry);
    if (ientry_mu5jet80 < 0) break;

    Long64_t ientry_mu3jet100 = mu3jet100R.LoadTree(jentry);
    if (ientry_mu3jet100 < 0) break;
    Long64_t ientry_mu5jet100 = mu5jet100R.LoadTree(jentry);
    if (ientry_mu5jet100 < 0) break;

    // basic cuts
    jetR.b_nref->GetEntry(ientry_jet);
    
    //don't remove this! 
    nb = jetR.fChain->GetEntry(jentry);   nbytes += nb;
    nb = globR.fChain->GetEntry(jentry);   nbytes += nb;
    nb = hiEvtR.fChain->GetEntry(jentry);  nbytes += nb;
    nb = hltR.fChain->GetEntry(jentry);  nbytes += nb;
    nb = mu3jet40R.fChain->GetEntry(jentry);  nbytes += nb;
    nb = mu5jet40R.fChain->GetEntry(jentry);  nbytes += nb;
    nb = mu3jet60R.fChain->GetEntry(jentry);  nbytes += nb;
    nb = mu5jet60R.fChain->GetEntry(jentry);  nbytes += nb;
    nb = mu3jet80R.fChain->GetEntry(jentry);  nbytes += nb;
    nb = mu5jet80R.fChain->GetEntry(jentry);  nbytes += nb;
    nb = mu3jet100R.fChain->GetEntry(jentry);  nbytes += nb;
    nb = mu5jet100R.fChain->GetEntry(jentry);  nbytes += nb;
    
    //noise filters
    bool noiseFiltOk = (globR.collisionEventSelectionAODv2 && globR.phfCoincFilter2Th4 && globR.pclusterCompatibilityFilter && globR.pprimaryVertexFilter && globR.pBeamScrapingFilter && globR.HBHENoiseFilterResultRun2Loose);
    if(!noiseFiltOk) continue;
        
    bool vZReq = abs(hiEvtR.vz)<15;
    if(!vZReq) continue;

    hiBin = hiEvtR.hiBin;    
    vz = hiEvtR.vz;
    hiHF = hiEvtR.hiHF;

    run = jetR.run;
    evt = jetR.evt;
    lumi = jetR.lumi;    
    nref=jetR.nref;
    
    if(hltR.HLT_HIL3Mu5Eta2p5_PuAK4CaloJet100Eta2p1_v1_Prescl>1) continue;

    if(hltR.HLT_HIL3Mu3Eta2p5_PuAK4CaloJet100Eta2p1_v1 == 0 && hltR.HLT_HIL3Mu5Eta2p5_PuAK4CaloJet100Eta2p1_v1 == 0 && hltR.HLT_HIL3Mu3Eta2p5_PuAK4CaloJet80Eta2p1_v1 == 0 && hltR.HLT_HIL3Mu5Eta2p5_PuAK4CaloJet80Eta2p1_v1 == 0 && hltR.HLT_HIL3Mu3Eta2p5_PuAK4CaloJet60Eta2p1_v1 == 0 && hltR.HLT_HIL3Mu5Eta2p5_PuAK4CaloJet60Eta2p1_v1 == 0 && hltR.HLT_HIL3Mu3Eta2p5_PuAK4CaloJet40Eta2p1_v1 == 0 && hltR.HLT_HIL3Mu5Eta2p5_PuAK4CaloJet40Eta2p1_v1 == 0) continue;

    HLT_HIL3Mu3Eta2p5_PuAK4CaloJet100Eta2p1_v1 = hltR.HLT_HIL3Mu3Eta2p5_PuAK4CaloJet100Eta2p1_v1;
    HLT_HIL3Mu5Eta2p5_PuAK4CaloJet100Eta2p1_v1 = hltR.HLT_HIL3Mu5Eta2p5_PuAK4CaloJet100Eta2p1_v1;
    HLT_HIL3Mu3Eta2p5_PuAK4CaloJet80Eta2p1_v1 = hltR.HLT_HIL3Mu3Eta2p5_PuAK4CaloJet80Eta2p1_v1;
    HLT_HIL3Mu5Eta2p5_PuAK4CaloJet80Eta2p1_v1 = hltR.HLT_HIL3Mu5Eta2p5_PuAK4CaloJet80Eta2p1_v1;
    HLT_HIL3Mu3Eta2p5_PuAK4CaloJet60Eta2p1_v1 = hltR.HLT_HIL3Mu3Eta2p5_PuAK4CaloJet60Eta2p1_v1;
    HLT_HIL3Mu5Eta2p5_PuAK4CaloJet60Eta2p1_v1 = hltR.HLT_HIL3Mu5Eta2p5_PuAK4CaloJet60Eta2p1_v1;
    HLT_HIL3Mu3Eta2p5_PuAK4CaloJet40Eta2p1_v1 = hltR.HLT_HIL3Mu3Eta2p5_PuAK4CaloJet40Eta2p1_v1;
    HLT_HIL3Mu5Eta2p5_PuAK4CaloJet40Eta2p1_v1 = hltR.HLT_HIL3Mu5Eta2p5_PuAK4CaloJet40Eta2p1_v1;

    //start with muXjet100

    weight = 0.;

    onlinePt->clear();
    onlineEta->clear();
    onlinePhi->clear();

    if(mu5jet100R.pt->size() > 0 || mu3jet100R.pt->size() > 0){
      weight = 1.0;

      //cout << "here jet 100" << endl;

      if(mu5jet100R.pt->size() > 0){
        for(uint i = 0; i<mu5jet100R.pt->size(); i++){
          if(mu5jet100R.TriggerObjID->at(i) == 0) {
	    onlinePt->push_back(mu5jet100R.pt->at(i));
	    onlineEta->push_back(mu5jet100R.eta->at(i));
	    onlinePhi->push_back(mu5jet100R.phi->at(i));
	  }
	  //cout << "in the mu5jet100 object and HLT = " << HLT_HIL3Mu5Eta2p5_PuAK4CaloJet100Eta2p1_v1 << "obj id = " << mu5jet100R.TriggerObjID->at(i) << " pt = " << mu5jet100R.pt->at(i) << " eta = " << mu5jet100R.eta->at(i) << " phi = " << mu5jet100R.phi->at(i) << endl;
        }
      }
      else if(mu3jet100R.pt->size() > 0){
        for(uint i = 0; i<mu3jet100R.pt->size(); i++){
          if(mu3jet100R.TriggerObjID->at(i) == 0) {
            onlinePt->push_back(mu3jet100R.pt->at(i));
            onlineEta->push_back(mu3jet100R.eta->at(i));
            onlinePhi->push_back(mu3jet100R.phi->at(i));
	  }
	  //cout << "in the mu3jet100 object and HLT = " << HLT_HIL3Mu3Eta2p5_PuAK4CaloJet100Eta2p1_v1 << "obj id = " << mu3jet100R.TriggerObjID->at(i) << " pt = " << mu3jet100R.pt->at(i) << " eta = " << mu3jet100R.eta->at(i) << " phi = " << mu3jet100R.phi->at(i) << endl;
        }
      }

    }
    else{
      //if not muXjet80
      if(mu5jet80R.pt->size() > 0 || mu3jet80R.pt->size() > 0){
	weight = 1.0;
	//cout << "here jet 80" << endl;
	if(mu5jet80R.pt->size() > 0){
	  for(uint i = 0; i<mu5jet80R.pt->size(); i++){
	    if(mu5jet80R.TriggerObjID->at(i) == 0) {
	      onlinePt->push_back(mu5jet80R.pt->at(i));
	      onlineEta->push_back(mu5jet80R.eta->at(i));
	      onlinePhi->push_back(mu5jet80R.phi->at(i));
	    }
	    //cout << "in the mu5jet80 object and HLT = " << HLT_HIL3Mu5Eta2p5_PuAK4CaloJet80Eta2p1_v1 << " obj id = "<< mu5jet80R.TriggerObjID->at(i) << " pt = " << mu5jet80R.pt->at(i) << " eta = " << mu5jet80R.eta->at(i) << " phi = " << mu5jet80R.phi->at(i) << endl;
	  }
	}
	else if(mu3jet80R.pt->size() > 0){
	  for(uint i = 0; i<mu3jet80R.pt->size(); i++){
	    if(mu3jet80R.TriggerObjID->at(i) == 0) {
	      onlinePt->push_back(mu3jet80R.pt->at(i));
	      onlineEta->push_back(mu3jet80R.eta->at(i));
	      onlinePhi->push_back(mu3jet80R.phi->at(i));
	    }
	    //cout << "in the mu3jet80 object and HLT = " << HLT_HIL3Mu3Eta2p5_PuAK4CaloJet80Eta2p1_v1 <<  << endl;
	  }
	}


      }
      else{
	//if not muXjet60
	if(mu5jet60R.pt->size() > 0 || mu3jet60R.pt->size() > 0){
	  //weight = PS60;
	  weight = 1.;
	  //cout << "here jet 60" << endl;
	  if(mu5jet60R.pt->size() > 0){
	    //cout << "here jet 60, mu5" << endl;
	    for(uint i = 0; i<mu5jet60R.pt->size(); i++){
	      if(mu5jet60R.TriggerObjID->at(i) == 0) {
		onlinePt->push_back(mu5jet60R.pt->at(i));
		onlineEta->push_back(mu5jet60R.eta->at(i));
		onlinePhi->push_back(mu5jet60R.phi->at(i));
	      }
	      //cout << "in the mu5jet60 object and HLT = " << HLT_HIL3Mu5Eta2p5_PuAK4CaloJet60Eta2p1_v1 << endl;
	    }
	  }
	  else if(mu3jet60R.pt->size() > 0){
	    //cout << "here jet 60 mu3" << endl;
	    for(uint i = 0; i<mu3jet60R.pt->size(); i++){
	      if(mu3jet60R.TriggerObjID->at(i) == 0) {
		onlinePt->push_back(mu3jet60R.pt->at(i));
		onlineEta->push_back(mu3jet60R.eta->at(i));
		onlinePhi->push_back(mu3jet60R.phi->at(i));
	      }
	      //cout << "in the mu3jet60 object and HLT = " << HLT_HIL3Mu3Eta2p5_PuAK4CaloJet60Eta2p1_v1 << endl;
	    }
	  }


	}
	else{
	  //if not muXjet40
	  //cout << "here jet 40" << endl;
	  if(mu5jet40R.pt->size() > 0 || mu3jet40R.pt->size() > 0){
	    weight = PS40;

	    if(mu5jet40R.pt->size() > 0){
	      for(uint i = 0; i<mu5jet40R.pt->size(); i++){
		if(mu5jet40R.TriggerObjID->at(i) == 0) {
		  onlinePt->push_back(mu5jet40R.pt->at(i));
		  onlineEta->push_back(mu5jet40R.eta->at(i));
		  onlinePhi->push_back(mu5jet40R.phi->at(i));
		}
		//cout << "in the mu5jet40 object and HLT = " << HLT_HIL3Mu5Eta2p5_PuAK4CaloJet40Eta2p1_v1 << endl;
	      }
	    }
	    else if(mu3jet40R.pt->size() > 0){
	      for(uint i = 0; i<mu3jet40R.pt->size(); i++){
		if(mu3jet40R.TriggerObjID->at(i) == 0) {
		  onlinePt->push_back(mu3jet40R.pt->at(i));
		  onlineEta->push_back(mu3jet40R.eta->at(i));
		  onlinePhi->push_back(mu3jet40R.phi->at(i));
		}
		//cout << "in the mu3jet40 object and HLT = " << HLT_HIL3Mu3Eta2p5_PuAK4CaloJet40Eta2p1_v1 << endl;
	      }
	    }

	  }
	}
      }
    }

    //cout << "here after trigger info" << endl;            

    nTP = onlinePt->size();
  
    //    cout << "online size = " << onlinePt->size() << endl;

    for(int iJet = 0; iJet < nref; iJet++){

      if(jetR.mupt[iJet]==0.) continue;
      if(fabs(jetR.jteta[iJet])>2.0) continue;
      if(jetR.jteta[iJet]< -1.39 && jetR.jtphi[iJet] > -1.6 && jetR.jtphi[iJet] < -0.9) continue;
      if(jetR.mupt[iJet]/jetR.rawpt[iJet]>0.6) continue;
      //cout << "iJet = "<< iJet<< endl;     

      mupt = jetR.mupt[iJet];
      rawpt = jetR.rawpt[iJet];
      jtpt = jetR.jtpt[iJet];
      jteta = jetR.jteta[iJet];
      jtphi = jetR.jtphi[iJet];
      discr_csvV2 = jetR.discr_csvV2[iJet];
      pdiscr_csvV2 = jetR.pdiscr_csvV2[iJet];
      ndiscr_csvV2 = jetR.ndiscr_csvV2[iJet];
      discr_prob = jetR.discr_prob[iJet];

      //cout << "here before tree fill" << endl;

      tr->Fill();

      //cout << "after tree fill" << endl;
    
    } // jet loop
    
  } // event loop

   fout->Write();
   fout->Close();

}

